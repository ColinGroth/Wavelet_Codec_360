#version 450
#extension GL_ARB_separate_shader_objects : enable

layout (local_size_x = 64) in;

layout (binding = 0, rgba32f) uniform image2D coefficients[8];
layout (binding = 1, rgba32f) uniform image2D mask;

layout(push_constant) uniform PCData {
	int level;
	int max_level;
	int frame_idx;
};

void main()
{
	uint idx = gl_GlobalInvocationID.x;
	ivec2 size = ivec2(imageSize(coefficients[0]).xy);
	ivec2 wsize = size >> level;
	ivec2 coord = ivec2(int(idx % size.x), int(idx / size.x));

	vec3 value = vec3(0);

	vec3 ret = imageLoad(coefficients[frame_idx], coord).rgb;
	if (coord.x < wsize.x && coord.y < wsize.y && length(ret) > 0){
		if(level == max_level || coord.x >= (wsize.x >> 1) || coord.y >= (wsize.y >> 1)){
			value =  vec3(1);
		}
	}

	imageStore(mask, coord, vec4(value, 1));
}